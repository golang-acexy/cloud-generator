package {{.PKG}}

import (
	"github.com/golang-acexy/cloud-database/databasecloud"
	"github.com/golang-acexy/starter-gorm/gormstarter"
{{- if .Pkg }}
	"{{ .Pkg }}"
{{- end }}
)

var {{.ParamName}}Repo = &{{.StructName}}Repo{
	GormRepository: databasecloud.GormRepository[
		gormstarter.IBaseMapper[gormstarter.BaseMapper[model.{{.StructName}}], model.{{.StructName}}],
		gormstarter.BaseMapper[model.{{.StructName}}],
		model.{{.StructName}},
	]{
		Mapper: {{.StructName}}Mapper{},
	},
}

func New{{.StructName}}Repo() *{{.StructName}}Repo {
	return {{.ParamName}}Repo
}

func (r {{.StructName}}Repo) RawMapper() {{.StructName}}Mapper {
	return {{.StructName}}Mapper{r.GormRepository.RawMapper()}
}

func (r {{.StructName}}Repo) WithTxRepo(tx *gorm.DB) {{.StructName}}Repo {
	return {{.StructName}}Repo{
		GormRepository: r.GormRepository.WithTxRepo(tx),
	}
}

func (r {{.StructName}}Repo) NewTxRepo() {{.StructName}}Repo {
	return {{.StructName}}Repo{
		GormRepository: r.GormRepository.NewTxRepo(),
	}
}

type {{.StructName}}Mapper struct {
	gormstarter.BaseMapper[model.{{.StructName}}]
}
type {{.StructName}}Repo struct {
	databasecloud.GormRepository[gormstarter.IBaseMapper[gormstarter.BaseMapper[model.{{.StructName}}],
		model.{{.StructName}}], gormstarter.BaseMapper[model.{{.StructName}}], model.{{.StructName}}]
}

// 在此处拓展自定义Mapper的业务功能

//func (m {{.StructName}}Mapper) MyMapperMethod() {
//	
//}

// ---------------------------------------

// 在此处拓展自定义Repo的业务功能

//func (r {{.StructName}}Repo) MyRepoMethod()  {
//	
//}